{"version":3,"file":"static/js/747.92af37f2.chunk.js","mappings":"qLAEaA,E,OAAOC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gD,0ICAhBC,EAAOH,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAMlBE,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4LAYpBI,EAASN,EAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qb,kBCmDnC,EAjEe,WACb,IAAAM,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAQF,EAAaG,IAAI,SAC/BC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAa,IAAIC,gBASvB,OARAf,IACEgB,EAAAA,EAAAA,IAAYhB,GACTiB,MAAK,SAAAZ,GACJC,EAAUD,EAAOa,KAAKC,QACxB,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACpB,IACG,kBAAMV,EAAWW,OAAQ,CAClC,GAAG,CAACzB,IAsBJ,OAHAsB,QAAQC,IAAIvB,GACZsB,QAAQC,IAAIlB,IAGVqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACrC,EAAI,CAACwC,SAtBW,SAAAC,GAanB,GAZAA,EAAEC,iBAEFT,QAAQC,IAAId,GACZa,QAAQC,IAAIvB,GAMZD,EAAgB,CAAEC,MAAOS,IACzBC,EAAU,IACVJ,EAAU,IACK,KAAXG,EACF,OAAOV,EAAgB,CAAC,EAE5B,EAMiC6B,SAAA,EAC3BI,EAAAA,EAAAA,KAAC1C,EAAK,CAAC2C,KAAK,OAAOC,MAAOzB,EAAQ0B,SAzCnB,SAAAL,GACnBpB,EAAUoB,EAAEM,OAAOF,MACrB,KAwCMF,EAAAA,EAAAA,KAACxC,EAAM,CAACyC,KAAK,SAAQL,SAAC,eAGxBI,EAAAA,EAAAA,KAAA,MAAAJ,SAEGvB,EAAOgC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OAEtBd,EAAAA,EAAAA,MAACzC,EAAAA,EAAI,CAAA2C,SAAA,EACHI,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAACC,KAAMlC,GAAUiB,SAAEY,IAAa,MADzDD,EAEJ,QAKjB,C","sources":["components/movieItem/MovieItem.styled.jsx","pages/Movies.styled.jsx","pages/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.li`\nmargin-bottom: 8px;\nfont-size: 20px;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nmargin: 16px 24px;\npadding: 0 20px;   \n`;\n\nexport const Input = styled.input`\n/* display: inline-block; */\nbox-sizing: border-box;\nfont-size: 24px;\noutline: 0;\nborder: 2px ridge #30a5e1; \n\n&:focus {\n    border: 2px ridge #e69c24 !important;    \n}\n`;\n\nexport const Search = styled.button`\nmargin: 0 0 0 8px;\nfont-size: 16px; \nfont-weight: bold;\n  color: #ffffff !important;\n  padding: 15px 25px;\n  box-shadow: 2px 2px 2px #4f4f4f;\n  border-radius: 5px;\n  border: 2px ridge #30a5e1;  \n  background: linear-gradient(to top, #0b4767, #30a5e1);\n\n  &:hover {\n  color: #e69c24 !important; \n  border: 2px ridge #f3c846; \n  /* background: white; */\n  background: linear-gradient(to top, #e4d8b4, white);\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { fetchMovies } from '../components/apiMovies';\nimport { Form, Input, Search } from './Movies.styled';\nimport { List } from 'components/movieItem/MovieItem.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const location = useLocation();\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    // запит\n    const controller = new AbortController();\n    query &&\n      fetchMovies(query)\n        .then(movies => {\n          setMovies(movies.data.results);\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n    return () => controller.abort();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    console.log(search);\n    console.log(query);\n\n    // if (movies.length === 0 ) {\n    //    alert('No movies found');\n    // }\n\n    setSearchParams({ query: search });\n    setSearch('');\n    setMovies([]);\n    if (search === '') {\n      return setSearchParams({});\n    }\n  };\n  console.log(query);\n  console.log(movies);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={search} onChange={handleChange} />\n        <Search type=\"submit\">Search</Search>\n      </Form>\n      \n      <ul>\n        \n        {movies.map(({ id, title }) => (\n            \n          <List key={id}>\n            <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>;\n          </List>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Form","Input","_templateObject2","Search","_templateObject3","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","search","setSearch","location","useLocation","useEffect","controller","AbortController","fetchMovies","then","data","results","catch","error","console","log","message","abort","_jsxs","_Fragment","children","onSubmit","e","preventDefault","_jsx","type","value","onChange","target","map","_ref","id","title","Link","to","concat","state","from"],"sourceRoot":""}